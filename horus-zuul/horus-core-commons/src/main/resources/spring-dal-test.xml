<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.fomoney.horus"></context:component-scan>
    <bean id="dataSource" class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
        <property name="targetDataSource">
            <bean id="dataSourceTarget" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
                <property name="driverClassName" value="${spring.datasource.driver-class-name}"/>
                <property name="url" value="${spring.datasource.url}" />
                <property name="username" value="${spring.datasource.username}" />
                <property name="password" value="${spring.datasource.password}" />
                <property name="initialSize" value="${spring.datasource.initialSize}" />
                <property name="minIdle" value="${spring.datasource.minIdle}" /><!-- min conn,lt will be created -->
                <property name="maxActive" value="${spring.datasource.maxActive}" />
                <property name="maxWait" value="${spring.datasource.maxWait}" /><!-- ms -->
                <property name="timeBetweenEvictionRunsMillis" value="${spring.datasource.timeBetweenEvictionRunsMillis}" />
                <property name="minEvictableIdleTimeMillis" value="${spring.datasource.minEvictableIdleTimeMillis}" />
                <property name="validationQuery" value="${spring.datasource.validationQuery}" />
                <property name="testWhileIdle" value="${spring.datasource.testWhileIdle}" />
                <property name="testOnBorrow" value="${spring.datasource.testOnBorrow}" />
                <property name="testOnReturn" value="${spring.datasource.testOnReturn}" />
                <property name="poolPreparedStatements" value="${spring.datasource.poolPreparedStatements}" />
                <property name="maxPoolPreparedStatementPerConnectionSize" value="${spring.datasource.maxPoolPreparedStatementPerConnectionSize}" />
                <property name="filters" value="${spring.datasource.filters}" />
            </bean>
        </property>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath*:mapper/*.xml" />
        <property name="typeAliasesPackage" value="com.fomoney.horus.core.commons.entity" />
    </bean>

    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" />
</beans>
